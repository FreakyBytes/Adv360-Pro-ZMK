/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */


/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>
#include "keys_de.h"

/ {
  behaviors {
    #include "macros.dtsi"
    #include "behaviors.dtsi"
  };

  keymap {
      compatible = "zmk,keymap";


        default_layer {
            bindings = <
 &symb_accent &symb_1      &symb_2      &symb_3      &symb_4   &symb_5         &tog 1                                                                       &mo 3    &symb_6    &symb_7 &symb_8      &symb_9    &symb_0   &symb_excl
 &kp TAB      &symb_semi   &symb_comma  &symb_dot    &kp DE_P  &kp DE_Y        &kp PRINTSCREEN                                                                    &kp PRINTSCREEN  &kp DE_F  &kp DE_G  &kp DE_C     &kp DE_R   &kp DE_L  &symb_bakslh
 &kp ESC      &kp DE_A     &kp DE_O     &kp DE_E     &kp DE_U  &kp DE_I        &kp LG(DE_D)  &kp LCTRL  &mo 4      &none   &none   &kp LALT  &kp RCTRL            &kp LG(ENTER)  &kp DE_D  &kp DE_H  &kp DE_T     &kp DE_N   &kp DE_S  &symb_minus
 &kp LSHFT    &symb_quote  &kp DE_Q     &kp DE_J     &kp DE_K  &kp DE_X        &none      &none  &kp HOME   &none   &none  &kp PG_UP      &none            &none  &kp DE_B  &kp DE_M  &kp DE_W     &kp DE_V   &kp DE_Z    &kp RSHFT
 &sl 2        &symb_dollar &symb_pipe   &kp LEFT     &kp RIGHT                 &kp BSPC    &kp DEL   &kp END                  &kp PG_DN  &kp SPACE        &kp ENTER              &kp UP  &kp DOWN  &symb_slh  &symb_at    &sl 2
            >;
        };

        layer_keypad {
            bindings = <
 &kp EQUAL     &kp N1    &kp N2    &kp N3     &kp N4  &kp N5        &trans                                                                 &mo 3  &kp N6  &kp KP_NUM  &kp KP_EQUAL  &kp KP_DIVIDE  &kp KP_MULTIPLY  &kp MINUS
   &kp TAB      &kp Q     &kp W     &kp E      &kp R   &kp T  &kp LG(DE_C)                                                                 &none   &kp Y   &kp KP_N7     &kp KP_N8      &kp KP_N9     &kp KP_MINUS   &kp BSLH
   &kp ESC      &kp A     &kp S     &kp D      &kp F   &kp G         &none  &kp LCTRL  &kp LALT   &none   &none   &kp LGUI  &kp RCTRL      &none   &kp H   &kp KP_N4     &kp KP_N5      &kp KP_N6      &kp KP_PLUS    &kp SQT
 &kp LSHFT      &kp Z     &kp X     &kp C      &kp V   &kp B         &none      &none  &kp HOME   &none   &none  &kp PG_UP      &none      &none   &kp N   &kp KP_N1     &kp KP_N2      &kp KP_N3     &kp KP_ENTER  &kp RSHFT
     &mo 2  &kp GRAVE  &kp CAPS  &kp LEFT  &kp RIGHT              &kp BSPC    &kp DEL   &kp END                  &kp PG_DN  &kp ENTER  &kp KP_N0              &kp UP      &kp DOWN     &kp KP_DOT         &kp RBKT      &mo 2
            >;
        };

        layer_fn {
            bindings = <
 &kp F1       &kp F2       &kp F3       &kp F4       &kp F5  &kp F6  &tog 1                                                   &mo 3  &kp F7       &kp F8  &kp F9  &kp F10    &kp F11  &kp F12
 &trans       &trans       &trans       &trans       &trans  &trans   &none                                                   &none  &trans       &trans  &trans   &trans     &trans   &trans
 &trans  &kp DE_ADIA  &kp DE_ODIA  &kp DE_EURO  &kp DE_UDIA  &trans   &none  &trans  &trans   &none   &none  &trans  &trans   &none  &trans       &trans  &trans   &trans  &kp DE_SS   &trans
 &trans       &trans       &trans       &trans       &trans  &trans   &none   &none  &trans   &none   &none  &trans   &none   &none  &trans  &kp DE_MICR  &trans   &trans     &trans   &trans
 &trans       &trans       &trans       &trans       &trans          &trans  &trans  &trans                  &trans  &trans  &trans               &trans  &trans   &trans     &trans   &trans
            >;
        };

        layer_mod {
            bindings = <
  &none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                   &none                                                                              &trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4   &none
  &none         &none         &none         &none         &none         &none             &bootloader                                                                         &bootloader         &none         &none         &none         &none         &none   &none
  &none         &none         &none         &none         &none         &none  &rgb_ug RGB_MEFS_CMD 5  &bt BT_CLR   &none   &none   &none  &bt BT_CLR  &bt BT_CLR  &rgb_ug RGB_MEFS_CMD 5         &none         &none         &none         &none         &none   &none
  &none         &none         &none         &none         &none         &none                   &none       &none   &none   &none   &none       &none       &none                   &none         &none         &none         &none         &none         &none   &none
  &none         &none         &none    &bl BL_INC    &bl BL_DEC                       &rgb_ug RGB_TOG  &bl BL_TOG   &none                       &none  &bl BL_TOG         &rgb_ug RGB_TOG                  &bl BL_INC    &bl BL_DEC         &none         &none   &none
            >;
        };

        layer_i3 {
            bindings = <
  &none         &i3_d1        &i3_d2        &i3_d3        &i3_d4        &i3_d5                  &none                                                                              &none          &i3_d6        &i3_d7        &i3_d8        &i3_d9        &i3_d10 &none
  &none         &none         &none         &none         &none         &none                   &none                                                                              &none          &none         &none         &none         &none         &none   &none
  &none         &none         &none         &none         &none         &none                   &none       &none   &none   &none   &none       &none       &none                  &none          &none         &kp LG(LEFT)  &kp LG(DOWN)    &kp LG(UP)  &kp LG(RIGHT) &none
  &kp LSHIFT    &none         &trans        &none         &none         &none                   &none       &none   &none   &none   &none       &kp LG(LS(PG_UP))       &none          &none          &none         &none         &none         &none         &none   &kp RSHIFT
  &none         &none         &none         &kp LG(LEFT)  &kp LG(RIGHT)                         &none               &none    &none                       &kp LG(LS(PG_DN))  &none          &none                   &kp LG(UP)     &kp LG(DOWN)          &none         &none   &none
            >;
        };

    };
};
